"use strict";import Walker from"walker";import path from"path";import fs from"fs";import yamlFront from"yaml-front-matter";import showdown from"showdown";import moment from"moment";import MiniSearch from"minisearch";import lunr from"lunr";import{footnotes}from"./lib/showdown-footnotes.js";import{dir,dateOptions,baseUrl,minisearchOpts,untaggedLabel}from"./lib/settings.js";import{templates,makeVid,makeImg,makeAlbum}from"./lib/index.js";const sh=new showdown.Converter({extensions:[footnotes],tables:!0,parseImgDimensions:!0,literalMidWordUnderscores:!0,literalMidWordAsterisks:!0,strikethrough:!0});let me="Puneet Kishor";const prevNext=function(e){console.log("populating prev-next");const t=e.entries.byDate,n=t.length;for(let i in e.entries.byName){let s,a;for(let e=0;e<n;e++)if(i.toLowerCase()===t[e].name.toLowerCase()){const i=e>0?e-1:0;s={name:t[i].name,title:t[i].title};const o=e+1<n?e+1:e;a={name:t[o].name,title:t[o].title};break}e.entries.byName[i].prev=s,e.entries.byName[i].next=a}},addEntryByTags=function(e,t,n){e.origTags?e.origTags.forEach((e=>{n.entries.byTag[e]?n.entries.byTag[e].push(t):n.entries.byTag[e]=[t]})):n.entries.byTag[untaggedLabel]?n.entries.byTag[untaggedLabel].push(t):n.entries.byTag[untaggedLabel]=[t]},addEntryByDate=function(e,t,n){n.entries.byDate.push(t);const i=new Date(e.created),s=i.getFullYear()||"9999",a=i.toLocaleDateString("en-US",{month:"long"})||"January",o=n.entries.byYear,r=o.map((e=>e.year)).indexOf(s);if(r>-1){const e=o[r].months.map((e=>e.month)).indexOf(a);e>-1?o[r].months[e].entries.length?o[r].months[e].entries.push(t):o[r].months[e].entries=[t]:o[r].months.push({month:a,entries:[t]})}else o.push({year:s,months:[{month:a,entries:[t]}]})},sortFunc=function(e){return function(t,n){return"date"===e?new Date(n[e])-new Date(t[e]):n[e]-t[e]}},buildHanozIndex=function(e){console.log("building hanoz index");const t=fs.readdirSync(dir.hanozDir).filter((function(e,t){const n=path.join(dir.hanozDir,e);if("."!==e.substring(0,1))return fs.lstatSync(n).isFile()}));let n=0,i=t.length;for(;n<i;n++){const i=dir.hanozDir+"/"+t[n],s=fs.readFileSync(i,"utf8"),a=yamlFront.loadFront(s);let o={};a&&(o.gifn=a.gifn,"left"===a.side?(o.l_opaque=".lcol.opaque",o.r_opaque=".rcol",o.l_text=a.__content,o.r_text=""):(o.l_opaque=".lcol",o.r_opaque=".rcol.opaque",o.l_text="",o.r_text=a.__content)),e.entries.hanoz.push(o)}},writeHanoz=function(e){const t=templates.views.hanoz({pages:e.entries.hanoz}),n=templates.layouts.hanoz({content:t});fs.writeFileSync(`${dir.docs}/Hanoz/p/index.html`,n)},buildSearchIndex=function(e,t){const n=[];let i=0;for(let s in t.entries.byName){const a=t.entries.byName[s],o={title:a.title,text:a.text,name:a.name};"mini"===e&&(o.id=i++),n.push(o)}if("lunr"===e)console.log("building _lunr_ search index"),t.idx=lunr((function(){this.field("title",{boost:10}),this.field("text"),this.ref("name"),n.forEach((e=>{this.add(e)}),this)}));else if("mini"===e){console.log("building _mini_ search index");const e=new MiniSearch(minisearchOpts);e.addAll(n),t.idx=e}},writeSearchIdx=function(e){console.log("writing search index"),fs.writeFileSync(`${dir.docs}/_search/searchIdx.json`,JSON.stringify(e.idx))},writeByName=function(e){for(let t in e.entries.byName){const n=e.entries.byName[t];try{n.content=templates.views[n.template](n)}catch(e){console.log(n)}n.minisearchOpts=minisearchOpts;const i=templates.layouts[n.layout](n);if(fs.writeFileSync(`${dir.docs}/${n.name}/index.html`,i),n.isPresentation){let e="presentation";"Biodiversity-Literature-Repository"===n.name&&(e="presentationPlazi"),n.content=templates.views[e](n);const t=templates.layouts[e](n),i=`${dir.docs}/${n.name}/p`;fs.existsSync(i)||fs.mkdirSync(i),fs.writeFileSync(`${i}/index.html`,t)}}},writeByDate=function(e){console.log("writing by dates");const t={created:moment().format("MMM DD, YYYY"),entries:e.entries.byYear,baseUrl:baseUrl},n={content:templates.views["entries-by-date"](t),baseUrl:baseUrl,minisearchOpts:minisearchOpts},i=templates.layouts.main(n);fs.writeFileSync(`${dir.docs}/_dates/index.html`,i)},writeByTags=function(e){console.log("writing by tags");const t=moment().format("MMM DD, YYYY"),n={created:t,baseUrl:baseUrl,entries:e.entries.byTag},i={content:templates.views["entries-by-tags"](n),baseUrl:baseUrl,minisearchOpts:minisearchOpts},s=templates.layouts.main(i);fs.writeFileSync(`${dir.docs}/_tags/index.html`,s);for(let n in e.entries.byTag){const i={created:t,baseUrl:baseUrl,entries:e.entries.byTag[n],tag:n},s={content:templates.views["entries-by-tag"](i),baseUrl:baseUrl,minisearchOpts:minisearchOpts},a=templates.layouts.main(s);n=n.replace(/\//g,"-"),n=n.replace(/ /g,"-"),fs.writeFileSync(`${dir.docs}/_tags/${n}.html`,a)}},writeDefault=function(e){const t="cv-latest"===e.entries.byDate[0].name?e.entries.byDate[1].name:e.entries.byDate[0].name,n=e.entries.byName[t.toLowerCase()];n.content="",n.isIndex=!0,n.minisearchOpts=minisearchOpts;const i=templates.layouts[n.layout](n);fs.writeFileSync(`${dir.docs}/index.html`,i)},finish=function(e){e.entries.byDate.sort(sortFunc("date")),e.entries.byYear.sort(((e,t)=>t.year-e.year)),e.entries.byYear.forEach((e=>e.months.sort(((e,t)=>t.month-e.month)))),prevNext(e),buildHanozIndex(e),buildSearchIndex("mini",e),writeByName(e),writeByDate(e),writeByTags(e),writeDefault(e),writeSearchIdx(e),writeHanoz(e)},makeDates=function(e){const t=new Date("1980-01-01 00:00:00").toLocaleDateString("en-US",dateOptions);e.modified=e.modified?new Date(e.modified).toLocaleDateString("en-US",dateOptions):t,e.created=e.created?new Date(e.created).toLocaleDateString("en-US",dateOptions):t};function processFile(e,t,n,i,s){const a={baseUrl:baseUrl,file:e,dir:path.dirname(e),name:t,url:"",dateGenerated:new Date,dateModified:n};i.entries[a.name]=n;const o=fs.readFileSync(e,"utf-8"),r=yamlFront.loadFront(o);for(let e in r)"tags"===e?(a.origTags=r.tags,a.tags=[],r.tags.forEach((e=>{if(e){let t=e;t=t.replace(/\//g,"-"),t=t.replace(/ /g,"-"),a.tags.push({tag:e,tagUrl:t})}}))):a[e]=r[e];makeDates(a);let l=!1,m=!1,c=!1;if(a.origTags){const e=a.origTags;l=e.includes("code"),m=e.indexOf("presentation")>-1,c=e.indexOf("album")>-1}if(a.hasCode=!!l,a.type&&a.type.forEach((e=>a[e]=!0)),m){if(a.layout=r.layout||"main",a.template=r.template||"entry-presentation","Biodiversity-Literature-Repository"===a.name&&(me=`${me} (Plazi)`),a.authors){const e=a.authors.length;e>1?(a.authors[e-1]=`and ${a.authors[e-1]}`,a.authors.unshift(me),a.authors=a.authors.join(", ")):a.authors=`${me} and ${a.authors[0]}`}else a.authors=me;a.isPresentation=!0}else c?(a.layout=r.layout||"main",a.template=r.template||"entry",a.isAlbum=!0,makeAlbum(a,a.url),a.isAlbum=!0):(a.layout=r.layout||"main",a.template=r.template||"entry",a.text=a.__content,a.__content=sh.makeHtml(a.__content),a.__content=makeImg(a.__content,a.url),a.__content=makeVid(a.__content,a.url));s.entries.byName[a.name.toLowerCase()]=a;const d={name:a.name,title:a.title,date:a.modified,notes:a.notes};addEntryByTags(a,d,s),addEntryByDate(a,d,s)}const go=function(e){let t;fs.existsSync("./published.json")&&(t=JSON.parse(fs.readFileSync("./published.json","utf8"))),t||(t={datePublished:new Date,entries:{}});const n={entries:{byName:{},byDate:[],byTag:{},byTag2:[],byYear:[],hanoz:[]},idx:{}};Walker(e).on("file",(function(e,i){if("index.md"===path.basename(e)){const i=path.dirname(e).split("/")[1],s=fs.statSync(e).mtime;if(i in t.entries){s>t.entries[i]&&processFile(e,i,s,t,n)}else processFile(e,i,s,t,n)}})).on("error",(function(e,t,n){console.log(`${e} on entry ${t}`)})).on("end",(function(){console.log("All files traversed."),fs.writeFileSync("./published.json",JSON.stringify(t))}))};go(dir.docs);